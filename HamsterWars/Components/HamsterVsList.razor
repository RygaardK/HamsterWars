@using DataAccessLibrary
@using DataAccessLibrary.Models
@using HamsterWars.Components
@using HamsterWars.Services

@inject IHamsterData _db
@inject IResultData _bd
@page "/matchwinners/{id:int}"


@if (allResults is null && hamster is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <HamsterCard hamster="hamster" />
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">GameID</th>
                <th scope="col">Winner</th>
                <th scope="col">Looser</th>
                <th scope="col">Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ResultModel result in allResults)
            {
                if (result.WinnerID == hamster.ID || result.LooserID == hamster.ID)
                {
                    <tr>
                        <th>@result.ID</th>
                        <td scope="row">
                            @if (@GetNames.GetCompetitorName(@result.WinnerID, allHamsters).Name == "Unknown")
                            {
                                <p style="color:red">@result.WinnerID</p>
                            }
                            else
                            {
                                @GetNames.GetCompetitorName(@result.WinnerID, allHamsters).Name
                            }
                        </td>
                        <td>
                            @if (@GetNames.GetCompetitorName(@result.LooserID, allHamsters).Name == "Unknown")
                            {
                                <p style="color:red">@result.LooserID</p>
                            }
                            else
                            {
                                @GetNames.GetCompetitorName(@result.LooserID, allHamsters).Name
                            }
                        </td>
                        <td>@result.Date</td>
                    </tr>
                }
            }
            @if(hamster.Games == 0)
                {
                    <tr>
                        <td colspan="4"><p class="text-center">No Games Played!</p></td>
                    </tr>
                }
        </tbody>
    </table>
}
@code {
    [Parameter]
    public int id { get; set; }
    HamsterModel hamster { get; set; }

    private HamsterModel setHamster()
    {
        return allHamsters.Where(s => s.ID == id).Single();
    }
    private List<ResultModel>? allResults;
    private List<HamsterModel>? allHamsters;
    protected override async Task OnInitializedAsync()
    {
        allHamsters = await _db.GetHamsters();
        allResults = await _bd.GetGames();
        hamster = setHamster();
    }
}
